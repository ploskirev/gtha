name: Node.js Package!!!

on: [push]

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          # registry-url: https://registry.npmjs.org/
          # cache: 'npm'
      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - run: node -v
  build:
    needs: install-deps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          # key: node_modules-${{hashFiles('package-lock.json')}}
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/**
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: build
      - run: ls -la
      - run: cd ./build
      - run: ls -la


# jobs:
#   publish-npm:
#     runs-on: ubuntu-latest
#     environment: Prod
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v4
#         with:
#           node-version: 20
#           registry-url: https://registry.npmjs.org/
#       - run: npm ci
#       - run: npm run build
#       - run: npm publish
#         env:
#           NODE_AUTH_TOKEN: ${{secrets.npm_token}}
